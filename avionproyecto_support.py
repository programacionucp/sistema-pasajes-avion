#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 18, 2020 08:12:38 PM -03  platform: Windows NT
#    Apr 18, 2020 11:38:17 PM -03  platform: Windows NT
#    Apr 19, 2020 03:51:05 PM -03  platform: Windows NT
#    Apr 19, 2020 03:57:14 PM -03  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True
def init(top, gui, *args, **kwargs):
    global w, top_level, root,lista_ejecutiva,lista_economica,asiento,dicdatosPasajeros, colorlbl,pasajeros
    w = gui
    top_level = top
    root = top
    lista_ejecutiva=[[w.asiento1,w.asiento5,w.asiento4,w.asiento8],[w.asiento2,w.asiento6,w.asiento3,w.asiento7]]
    lista_economica=[[w.asiento9,w.asiento15,w.asiento14,w.asiento20],
                     [w.asiento10,w.asiento16,w.asiento13,w.asiento19,],[w.asiento11,w.asiento17,w.asiento12,w.asiento18]]

def set_Tk_var():
    global clasesP
    clasesP = tk.StringVar()
    global ubicacionP
    ubicacionP = tk.StringVar()
    global ubicacion_p
    ubicacion_p = tk.StringVar()
    global cedulapasajero
    cedulapasajero = tk.StringVar()
    global nombre_pasajero
    nombre_pasajero = tk.StringVar()
    global ventanaU
    ventanaU = tk.IntVar()
    global clasesvuelos
    clasesvuelos = tk.StringVar()

def buscar_pasajero():
    print('avionproyecto_support.buscar_pasajero')
    sys.stdout.flush()

def eliminar_pasajero():
    print('avionproyecto_support.eliminar_pasajero')
    sys.stdout.flush()
def datos_pasajero(nombre,cedula,clase,ubicacion,colorlbl):
    global dicDatospasajeros,todos
    dicDatospasajeros=dict()
    dicDatospasajeros["nombre:"]=nombre
    dicDatospasajeros["cedula:"] = cedula
    dicDatospasajeros["clase :"] = clase
    dicDatospasajeros["ubicacion:"] = ubicacion
    dicDatospasajeros["colorlbl :"] =colorlbl
    return dicDatospasajeros
def porcentaje_ocupacion():
    global todospasajeros
    todospasajeros=list()
    todospasajeros.append(pasajeros)
    for pasajero in todospasajeros:
        print(pasajero)
    print(len(todospasajeros))

    sys.stdout.flush()


def registrar_pasajeros():

    global asiento,dicdatosPasajeros, colorlbl,pasajeros
    asientov=0
    asientop=0
    asientoc=0

    if clasesvuelos.get()== "ejecutiva"and ubicacionP.get()=="ventana" :
        lista_ejecutiva[0][asientov].config(background="red")
        colorlbl = lista_ejecutiva[0][asientov]
        asientov+= 1
    if clasesvuelos.get()=="ejecutiva"and ubicacionP.get()=="pasillo":
        lista_ejecutiva[1][asientop].config(background="red")
        colorlbl = lista_ejecutiva[1][asientop]
        asientop += 1
    #claseECONOMICA
    if clasesvuelos.get() == "economica" and ubicacionP.get() == "ventana":
        lista_economica[0][asientov].config(background="red")
        colorlbl = lista_economica[0][asientov]
        asientov += 1
    if clasesvuelos.get() == "economica" and ubicacionP.get() == "centro":
        lista_economica[1][asientov].config(background="red")
        colorlbl = lista_economica[1][asientov]
        asientoc += 1
    if clasesvuelos.get() == "economica" and ubicacionP.get() == "pasillo":
        lista_economica[2][asientov].config(background="red")
        colorlbl = lista_economica[2][asientov]
        asientov += 1
    pasajeros=datos_pasajero(nombre_pasajero.get(),cedulapasajero.get(),clasesvuelos.get(),ubicacionP.get(),colorlbl)


    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import avionproyecto
    avionproyecto.vp_start_gui()





