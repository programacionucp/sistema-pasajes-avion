#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 15, 2020 05:54:38 PM -03  platform: Windows NT
#    Apr 16, 2020 01:46:02 AM -03  platform: Windows NT
#    Apr 18, 2020 11:04:24 PM -03  platform: Windows NT

import sys
from tkinter import *

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

lstAsientos = []
lstEjecutivoVentana = []
lstEjecutivoPasillo = []
lstEconomicoVentana = []
lstEconomicoPasillo = []
lstEconomicoCentro = []
asientoEjV = -1
asientoEjP = -1
asientoEcV = -1
asientoEcC = -1
asientoEcP = -1
def init(top, gui, *args, **kwargs):
    global w, top_level, root, lstAsientos, lstEjecutivoVentana, lstEjecutivoPasillo, lstEconomicoPasillo, lstEconomicoCentro, lstEconomicoVentana
    w = gui
    top_level = top
    root = top
    lstAsientos = [[[w.asiento1,"Nombre","DNI","1"],[w.asiento4,"Nombre","DNI","4"],[w.asiento5,"Nombre","DNI","5"],[w.asiento8,"Nombre","DNI","8"]],
                  [[w.asiento2,"Nombre","DNI","2"],[w.asiento3,"Nombre","DNI","3"],[w.asiento6,"Nombre","DNI","6"],[w.asiento7,"Nombre","DNI","7"]],
                  [[w.asiento9,"Nombre","DNI","9"],[w.asiento14,"Nombre","DNI","14"],[w.asiento15,"Nombre","DNI","15"],[w.asiento20,"Nombre","DNI","20"]],
                  [[w.asiento11,"Nombre","DNI","11"],[w.asiento12,"Nombre","DNI","12"],[w.asiento17,"Nombre","DNI","17"],[w.asiento18,"Nombre","DNI","18"]],
                  [[w.asiento10,"Nombre","DNI","10"],[w.asiento13,"Nombre","DNI","13"],[w.asiento16,"Nombre","DNI","16"],[w.asiento19,"Nombre","DNI","19"]]]
    lstEjecutivoVentana = lstAsientos[0]
    lstEjecutivoPasillo = lstAsientos[1]
    lstEconomicoVentana = lstAsientos[2]
    lstEconomicoPasillo = lstAsientos[3]
    lstEconomicoCentro = lstAsientos[4]

def buscarPasajero():
    lblDNI = Label(top_level, text="Ingrese el DNI del pasajero:", font=("Arial Bold", 11))
    lblDNI.place(x=5, y=430)
    txtDNI = Entry(top_level)
    txtDNI.place(x=200, y=433)
    DNI = 0
    def buscar():
        global DNI, lstAsientos, lstEjecutivoVentana, lstEjecutivoPasillo, lstEconomicoVentana, lstEconomicoPasillo, lstEconomicoCentro
        DNI = int(txtDNI.get())
        encontrado = bool(0)
        for tipoAsiento in lstAsientos:
            for asiento in tipoAsiento:
                if asiento[2] == DNI:
                    encontrado = bool(1)
                    lblDNI.destroy()
                    txtDNI.destroy()
                    btnBuscar.destroy()
                    lblNombre = Label(top_level, text=f"Nombre: {asiento[1]}",font=("Arial Bold", 11))
                    lblNombre.place(x=200,y=430)
                    lblAsiento = Label(top_level, text=f"Número de asiento: {asiento[3]}",font=("Arial Bold", 11))
                    lblAsiento.place(x=200,y=460)
                    def botonOK1():
                        lblNombre.destroy()
                        lblAsiento.destroy()
                        btnOK.destroy()
                    btnOK = Button(top_level, text="OK", command=botonOK1)
                    btnOK.place(x=280, y=500)
        if encontrado == True:
            pass
        elif encontrado == False:
            lblDNI.destroy()
            txtDNI.destroy()
            btnBuscar.destroy()
            lblError = Label(top_level, text="No se encontró un pasajero con ese documento.", background="red", font=("Arial Bold", 11))
            lblError.place(x=150, y=430)
            def botonOK2():
                lblError.destroy()
                btnOK.destroy()
            btnOK = Button(top_level, text="OK", command=botonOK2)
            btnOK.place(x=300, y=460)
    btnBuscar = Button(top_level, text="Buscar", command=buscar)
    btnBuscar.place(x=310, y=430)

def eliminarPasajero():
    lblDNI = Label(top_level, text="Ingrese el DNI del pasajero a eliminar:", font=("Arial Bold", 11))
    lblDNI.place(x=5, y=430)
    txtDNI = Entry(top_level)
    txtDNI.place(x=260, y=433)
    def buscar():
        global lstAsientos,lstEjecutivoVentana,lstEjecutivoPasillo,lstEconomicoVentana,lstEconomicoPasillo,lstEconomicoCentro
        DNI = int(txtDNI.get())
        encontrado = bool(0)
        for tipoAsiento in lstAsientos:
            for asiento in tipoAsiento:
                if asiento[2] == DNI:
                    encontrado = bool(1)
                    lblDNI.destroy()
                    txtDNI.destroy()
                    btnBuscar.destroy()
                    lblNombre = Label(top_level, text=f"Nombre: {asiento[1]}",font=("Arial Bold", 11))
                    lblNombre.place(x=200,y=430)
                    lblAsiento = Label(top_level, text=f"Número de asiento: {asiento[3]}",font=("Arial Bold", 11))
                    lblAsiento.place(x=200,y=460)
                    def eliminar():
                        global asientoEjV, asientoEjP, asientoEcV, asientoEcC, asientoEcP
                        for tipoAsiento in lstAsientos:
                            for asiento in tipoAsiento:
                                if asiento[2] == DNI:
                                    encontrado = bool(1)
                                    lblDNI.destroy()
                                    txtDNI.destroy()
                                    btnBuscar.destroy()
                                    if asiento[2] == DNI:
                                        if asiento in lstEjecutivoVentana:
                                            asiento[0].configure(background="#f3e743")
                                            asientoEjV -= 1
                                        elif asiento in lstEjecutivoPasillo:
                                            asiento[0].configure(background="#f3e743")
                                            asientoEjP -= 1
                                        elif asiento in lstEconomicoVentana:
                                            asiento[0].configure(background="#70c7c7")
                                            asientoEcV -= 1
                                        elif asiento in lstEconomicoCentro:
                                            asiento[0].configure(background="#70c7c7")
                                            asientoEcC -= 1
                                        elif asiento in lstEconomicoPasillo:
                                            asiento[0].configure(background="#70c7c7")
                                            asientoEcP -= 1
                                        asiento[1] = "Nombre"
                                        asiento[2] = "DNI"

                        lblNombre.destroy()
                        lblAsiento.destroy()
                        btnEliminar.destroy()
                    btnEliminar = Button(top_level, text="Eliminar", command=eliminar)
                    btnEliminar.place(x=280, y=500)
        if encontrado == True:
            pass
        elif encontrado == False:
            lblDNI.destroy()
            txtDNI.destroy()
            btnBuscar.destroy()
            lblError = Label(top_level, text="No se encontró un pasajero con ese documento.", background="red", font=("Arial Bold", 11))
            lblError.place(x=150, y=430)
            def botonOK2():
                lblError.destroy()
                btnOK.destroy()
            btnOK = Button(top_level, text="OK", command=botonOK2)
            btnOK.place(x=300, y=460)
    btnBuscar = Button(top_level, text="Buscar", command=buscar)
    btnBuscar.place(x=400, y=430)

def porcentajeOcup():
    global lstAsientos, lstEjecutivoVentana, lstEjecutivoPasillo, lstEconomicoVentana, lstEconomicoPasillo, lstEconomicoCentro
    asientosOcupados = 0
    totalAsientos = len(lstEjecutivoVentana)+len(lstEjecutivoPasillo)+len(lstEconomicoVentana)+len(lstEconomicoPasillo)+len(lstEconomicoCentro)
    for asientoTipo in lstAsientos:
        for asiento in asientoTipo:
            if asiento[2] != "DNI":
                asientosOcupados += 1
    def Aceptar():
        lblPorcentaje.destroy()
        btnAceptar.destroy()
    Total = asientosOcupados/totalAsientos*100
    lblPorcentaje = Label(top_level, text=f"Se ocupó el {Total}% de los asientos", font=("Arial Bold", 11))
    lblPorcentaje.place(x=180, y=430)
    btnAceptar = Button(top_level, text="Aceptar", command=Aceptar)
    btnAceptar.place(x=260,y=460)

def registrarPasajero():
    nombre = ""
    DNI = 0
    def guardarYobtenerAsiento():
        global DNI, nombre, lstAsientos
        nombre = txtNombre.get()
        DNI = int(txtDNI.get())
        lblNombre.destroy()
        lblDNI.destroy()
        txtNombre.destroy()
        txtDNI.destroy()
        btnObtenerUsuario.destroy()
        mismoDNI = bool(0)
        for tipoAsiento in lstAsientos:
            for asiento in tipoAsiento:
                if asiento[2] == DNI:
                    mismoDNI = bool(1)
        if mismoDNI == True:
            lblError = Label(top_level, text="Ese DNI ya se encuentra registrado.", background="red",
                             font=("Arial Bold", 11))
            lblError.place(x=150, y=430)
            def botonOK():
                lblError.destroy()
                btnOK.destroy()
            btnOK = Button(top_level, text="OK", command=botonOK)
            btnOK.place(x=400, y=430)
        else:
            lblClase = Label(top_level, text="Seleccione clase:", font=("Arial Bold", 11))
            lblClase.place(x=5, y=430)
            var = IntVar()
            radEjecutivo = Radiobutton(top_level, text='Ejecutivo', value=1, variable=var, command=lambda:botonEjecutivo(lblClase,radEjecutivo,radEconomico))
            radEjecutivo.place(x=140, y=430)
            radEconomico = Radiobutton(top_level, text='Económico', value=2, variable=var, command=lambda:botonEconomico(lblClase,radEjecutivo,radEconomico))
            radEconomico.place(x=140, y=460)
    def botonEjecutivo(clase,rEj,rEc):
        seleccionEjecutivo = IntVar()
        clase.destroy()
        rEj.destroy()
        rEc.destroy()
        lblPosicion = Label(top_level, text="Posición:", font=("Arial Bold", 11))
        lblPosicion.place(x=5, y=430)
        radVentana = Radiobutton(top_level, text='Ventana', value=1, variable=seleccionEjecutivo)
        radPasillo = Radiobutton(top_level, text='Pasillo', value=2, variable=seleccionEjecutivo)
        radVentana.place(x=100, y=430)
        radPasillo.place(x=100,y=460)
        def botonGuardar():
            global nombre, DNI, asientoEjV, asientoEjP, posicionEjecutivo, lstAsientos, lstEjecutivoVentana, \
                   lstEjecutivoPasillo, lstEconomicoVentana, lstEconomicoPasillo, lstEconomicoCentro
            posicionEjecutivo = seleccionEjecutivo.get()
            lblPosicion.destroy()
            radPasillo.destroy()
            radVentana.destroy()
            btnGuardar.destroy()
            if posicionEjecutivo == 1:
                try:
                    asientoEjV += 1
                    if lstEjecutivoVentana[asientoEjV][2] == "DNI":
                        lstEjecutivoVentana[asientoEjV][0].configure(background="#db0005")
                        lstEjecutivoVentana[asientoEjV][1] = nombre
                        lstEjecutivoVentana[asientoEjV][2] = DNI
                    else:
                        while lstEjecutivoVentana[asientoEjV][2] != "DNI":
                                asientoEjV -=1
                        lstEjecutivoVentana[asientoEjV][0].configure(background="#db0005")
                        lstEjecutivoVentana[asientoEjV][1] = nombre
                        lstEjecutivoVentana[asientoEjV][2] = DNI
                except IndexError:
                    lblError = Label(top_level, text="No quedan mas asientos vacios.", background="red",
                                     font=("Arial Bold", 11))
                    lblError.place(x=150, y=430)
                    def botonOK():
                        lblError.destroy()
                        btnOK.destroy()
                    btnOK = Button(top_level, text="OK", command=botonOK)
                    btnOK.place(x=400, y=430)
                    asientoEjV -= 1

            elif posicionEjecutivo == 2:
                try:
                    asientoEjP += 1
                    if lstEjecutivoPasillo[asientoEjP][2] == "DNI":
                        lstEjecutivoPasillo[asientoEjP][0].configure(background="#db0005")
                        lstEjecutivoPasillo[asientoEjP][1] = nombre
                        lstEjecutivoPasillo[asientoEjP][2] = DNI
                    else:
                        while lstEjecutivoVPasillo[asientoEjP][2] != "DNI":
                                asientoEjP -=1
                        lstEjecutivoPasillo[asientoEjP][0].configure(background="#db0005")
                        lstEjecutivoPasillo[asientoEjP][1] = nombre
                        lstEjecutivoPasillo[asientoEjP][2] = DNI
                except IndexError:
                    lblError = Label(top_level, text="No quedan mas asientos vacios.", background="red",
                                     font=("Arial Bold", 11))
                    lblError.place(x=150, y=430)
                    def botonOK():
                        lblError.destroy()
                        btnOK.destroy()
                    btnOK = Button(top_level, text="OK", command=botonOK)
                    btnOK.place(x=400, y=430)
                    asientoEjP -= 1
        btnGuardar = Button(top_level, text='Guardar', command=botonGuardar)
        btnGuardar.place(x=170,y=460)

    def botonEconomico(clase,rEj,rEc):
        seleccionEconomico = IntVar()
        clase.destroy()
        rEj.destroy()
        rEc.destroy()
        lblPosicion = Label(top_level, text="Posición:", font=("Arial Bold", 11))
        lblPosicion.place(x=5, y=430)
        radVentana = Radiobutton(top_level, text='Ventana', value=1, variable=seleccionEconomico)
        radCentro = Radiobutton(top_level, text='Centro', value=2, variable=seleccionEconomico)
        radPasillo = Radiobutton(top_level, text='Pasillo', value=3, variable=seleccionEconomico)
        radVentana.place(x=100, y=430)
        radCentro.place(x=100, y=460)
        radPasillo.place(x=100, y=490)
        def botonGuardar():
            global nombre, DNI, asientoEcV, asientoEcC, asientoEcP, posicionEconomico, lstAsientos, lstEjecutivoVentana, \
            lstEjecutivoPasillo, lstEconomicoVentana, lstEconomicoPasillo, lstEconomicoCentro
            posicionEconomico = seleccionEconomico.get()
            lblPosicion.destroy()
            radPasillo.destroy()
            radCentro.destroy()
            radVentana.destroy()
            btnGuardar.destroy()
            if posicionEconomico == 1:
                try:
                    asientoEcV += 1
                    if lstEconomicoVentana[asientoEcV][2] == "DNI":
                        lstEconomicoVentana[asientoEcV][0].configure(background="#db0005")
                        lstEconomicoVentana[asientoEcV][1] = nombre
                        lstEconomicoVentana[asientoEcV][2] = DNI
                    else:
                        while lstEconomicoVentana[asientoEcV][2] != "DNI":
                            asientoEcV -= 1
                        lstEconomicoVentana[asientoEcV][0].configure(background="#db0005")
                        lstEconomicoVentana[asientoEcV][1] = nombre
                        lstEconomicoVentana[asientoEcV][2] = DNI
                except IndexError:
                    lblError = Label(top_level, text="No quedan mas asientos vacios.", background="red",
                                     font=("Arial Bold", 11))
                    lblError.place(x=150, y=430)
                    def botonOK():
                        lblError.destroy()
                        btnOK.destroy()
                    btnOK = Button(top_level, text="OK", command=botonOK)
                    btnOK.place(x=400, y=430)
                    asientoEcV -= 1

            elif posicionEconomico == 3:
                try:
                    asientoEcP += 1
                    if lstEconomicoPasillo[asientoEcP][2] == "DNI":
                        lstEconomicoPasillo[asientoEcP][0].configure(background="#db0005")
                        lstEconomicoPasillo[asientoEcP][1] = nombre
                        lstEconomicoPasillo[asientoEcP][2] = DNI
                    else:
                        while lstEconomicoPasillo[asientoEcP][2] != "DNI":
                            asientoEcP -= 1
                        lstEconomicoPasillo[asientoEcP][0].configure(background="#db0005")
                        lstEconomicoPasillo[asientoEcP][1] = nombre
                        lstEconomicoPasillo[asientoEcP][2] = DNI
                except IndexError:
                    lblError = Label(top_level, text="No quedan mas asientos vacios.", background="red",
                                     font=("Arial Bold", 11))
                    lblError.place(x=150, y=430)
                    def botonOK():
                        lblError.destroy()
                        btnOK.destroy()
                    btnOK = Button(top_level, text="OK", command=botonOK)
                    btnOK.place(x=400, y=430)
                    asientoEcP -= 1
            elif posicionEconomico == 2:
                try:
                    asientoEcC += 1
                    if lstEconomicoCentro[asientoEcC][2] == "DNI":
                        lstEconomicoCentro[asientoEcC][0].configure(background="#db0005")
                        lstEconomicoCentro[asientoEcC][1] = nombre
                        lstEconomicoCentro[asientoEcC][2] = DNI
                    else:
                        while lstEconomicoCentro[asientoEcC][2] != "DNI":
                            asientoEcC -= 1
                        lstEconomicoCentro[asientoEcC][0].configure(background="#db0005")
                        lstEconomicoCentro[asientoEcC][1] = nombre
                        lstEconomicoCentro[asientoEcC][2] = DNI
                except IndexError:
                    lblError = Label(top_level, text="No quedan mas asientos vacios.", background="red",
                                     font=("Arial Bold", 11))
                    lblError.place(x=150, y=430)
                    def botonOK():
                        lblError.destroy()
                        btnOK.destroy()
                    btnOK = Button(top_level, text="OK", command=botonOK)
                    btnOK.place(x=400, y=430)
                    asientoEcC -= 1
        btnGuardar = Button(top_level, text='Guardar', command=botonGuardar)
        btnGuardar.place(x=170, y=490)

    lblNombre = Label(top_level, text="Nombre y apellido:", font=("Arial Bold", 11))
    lblNombre.place(x=5, y=430)
    lblDNI = Label(top_level, text="DNI:", font=("Arial Bold", 11))
    lblDNI.place(x=5, y=460)
    txtNombre = Entry(top_level)
    txtNombre.place(x=150, y=430)
    txtDNI = Entry(top_level)
    txtDNI.place(x=150, y=460)
    btnObtenerUsuario = Button(top_level, text="Aceptar", command=guardarYobtenerAsiento)
    btnObtenerUsuario.place(x=150, y=490)

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import TPPasajeros
    TPPasajeros.vp_start_gui()