#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 15, 2020 09:06:31 PM -03  platform: Windows NT

import sys
from tkinter import*
import tkinter as tk
from tkinter import messagebox

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

#Asientos Ejecutivos
listaOcupadosEjecutivosVentanilla = list()
listaOcupadosEjecutivosPasillo = list()
#Asientos Turistas
listaOcupadosTuristaVentanilla = list()
listaOcupadosTuristaMedio = list()
listaOcupadosTuristaPasillo = list()
#Cedula del Pasajero
listaCedulaPasajero = list()
listaNombrePasajero = list()
asientos = list()
cancelacionDeVuelos = list()

def center(win):
       win.update_idletasks()
       width = win.winfo_width()
       frm_width = win.winfo_rootx() - win.winfo_x()
       win_width = width + 2 * frm_width
       height = win.winfo_height()
       titlebar_height = win.winfo_rooty() - win.winfo_y()
       win_height = height + titlebar_height + frm_width
       x = win.winfo_screenwidth() // 2 - win_width // 2
       y = win.winfo_screenheight() // 2 - win_height // 2
       win.geometry('{}x{}+{}+{}'.format(width, height, x, y))
       win.deiconify()


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def buscarPasajero():
    asientosEjecutivos = [[w.pasajero1,w.pasajero4,w.pasajero5,w.pasajero8],[w.pasajero2,w.pasajero3,w.pasajero6,w.pasajero7]]
    asientosTuristas = [[w.pasajero9,w.pasajero15,w.pasajero21,w.pasajero27,w.pasajero33,w.pasajero39,w.pasajero45,#ventanilla Turista IZQ(0-6) "0"
                     w.pasajero14,w.pasajero20,w.pasajero26,w.pasajero32,w.pasajero38,w.pasajero44,w.pasajero50],#ventanilla Turista DER(7-13) "0"
                    [w.pasajero10,w.pasajero16,w.pasajero22,w.pasajero28,w.pasajero34,w.pasajero40,w.pasajero46,#Centro Turista IZQ(0-6) "1"
                     w.pasajero13,w.pasajero19,w.pasajero25,w.pasajero31,w.pasajero37,w.pasajero43,w.pasajero49],#Centro Turista DER(7-13) "1"
                    [w.pasajero11,w.pasajero12,w.pasajero17,w.pasajero18,w.pasajero23,w.pasajero24,w.pasajero29,#Pasillo Turista IZQ(0-6) "2"
                     w.pasajero30,w.pasajero35,w.pasajero36,w.pasajero41,w.pasajero42,w.pasajero47,w.pasajero48]]
    ventanaBusqueda = tk.Toplevel(root)
    ventanaBusqueda.title("Ingresar Datos")
    center(ventanaBusqueda)
    ventanaBusqueda.geometry("240x180")
    Label_1B = Label(ventanaBusqueda, text="Ingrese el numero de Cedula\n que desea Buscar")
    Label_1B.grid (column = 0, row = 0,sticky = 'n')
    Entry_1B = Entry (ventanaBusqueda, relief = 'sunken',bg = 'white',bd = 2, width = 25)
    Entry_1B.grid (column = 0, row = 1)
    Entry_1B.focus()
    btn = Button (ventanaBusqueda,text = 'BUSCAR',relief = 'raised',bg = 'lightskyblue',bd = 3,height = 1, width = 28,command = lambda : [buscar()])
    btn.grid (column = 0, row = 2)
    def buscar():
        busquedaCedula = Entry_1B.get()
        if busquedaCedula in listaCedulaPasajero:
            ubicacion = listaCedulaPasajero.index(busquedaCedula)
            Label_2B = Label(ventanaBusqueda, text=listaNombrePasajero[ubicacion],font =('Arial',10,'bold'))
            Label_2B.grid (column = 0, row = 3,sticky = 'n')

def eliminarPasajero():
    asientosEjecutivos = [[w.pasajero1,w.pasajero4,w.pasajero5,w.pasajero8],[w.pasajero2,w.pasajero3,w.pasajero6,w.pasajero7]]
    asientosTuristas = [[w.pasajero9,w.pasajero15,w.pasajero21,w.pasajero27,w.pasajero33,w.pasajero39,w.pasajero45,#ventanilla Turista IZQ(0-6) "0"
                     w.pasajero14,w.pasajero20,w.pasajero26,w.pasajero32,w.pasajero38,w.pasajero44,w.pasajero50],#ventanilla Turista DER(7-13) "0"
                    [w.pasajero10,w.pasajero16,w.pasajero22,w.pasajero28,w.pasajero34,w.pasajero40,w.pasajero46,#Centro Turista IZQ(0-6) "1"
                     w.pasajero13,w.pasajero19,w.pasajero25,w.pasajero31,w.pasajero37,w.pasajero43,w.pasajero49],#Centro Turista DER(7-13) "1"
                    [w.pasajero11,w.pasajero12,w.pasajero17,w.pasajero18,w.pasajero23,w.pasajero24,w.pasajero29,#Pasillo Turista IZQ(0-6) "2"
                     w.pasajero30,w.pasajero35,w.pasajero36,w.pasajero41,w.pasajero42,w.pasajero47,w.pasajero48]]

    ventanaBusqueda = tk.Toplevel(root)
    ventanaBusqueda.title("Ingresar Datos")
    center(ventanaBusqueda)
    ventanaBusqueda.geometry("240x180")
    Label_1B = Label(ventanaBusqueda, text="Ingrese el numero de Cedula\n que desea Buscar")
    Label_1B.grid (column = 0, row = 0,sticky = 'n')
    Entry_1B = Entry (ventanaBusqueda, relief = 'sunken',bg = 'white',bd = 2, width = 25)
    Entry_1B.grid (column = 0, row = 1)
    Entry_1B.focus()
    btn = Button (ventanaBusqueda,text = 'ELIMINAR',relief = 'raised',bg = 'lightskyblue',bd = 3,height = 1, width = 28,command = lambda : [eliminar()])
    btn.grid (column = 0, row = 2)
    def eliminar():
        numCedula = Entry_1B.get()
        contador = 0
        cancelacionDeVuelos.append(contador)
        if numCedula in listaCedulaPasajero:
            ubicacion = listaCedulaPasajero.index(numCedula)
            for pasajero in range (len(cancelacionDeVuelos)):
                if pasajero == contador:
                    pasajero = asientosEjecutivos[0][contador]
                    pasajero.configure(background="#80ffff")
                    listaCedulaPasajero.remove(numCedula)
                    listaNombrePasajero.pop(ubicacion)
                    ventanaBusqueda.destroy()
                    contador += 1
        



def porcentajeOcupacion():
    asientosOcupados = (len(listaOcupadosEjecutivosVentanilla) + len(listaOcupadosEjecutivosPasillo))* 100
    totalAsientos = 50
    porcentajeOcupado =asientosOcupados / totalAsientos
    messagebox.showinfo(title ='Porcetaje de Ocupacion del Avion',message = 'El Porcentaje de ocupacion es de:\n' '%' + str(porcentajeOcupado), icon = 'info')


def registroDePasajero():
    asientosEjecutivos = [[w.pasajero1,w.pasajero4,w.pasajero5,w.pasajero8],[w.pasajero2,w.pasajero3,w.pasajero6,w.pasajero7]]
    asientosTuristas = [[w.pasajero9,w.pasajero15,w.pasajero21,w.pasajero27,w.pasajero33,w.pasajero39,w.pasajero45,#ventanilla Turista IZQ(0-6) "0"
                     w.pasajero14,w.pasajero20,w.pasajero26,w.pasajero32,w.pasajero38,w.pasajero44,w.pasajero50],#ventanilla Turista DER(7-13) "0"
                    [w.pasajero10,w.pasajero16,w.pasajero22,w.pasajero28,w.pasajero34,w.pasajero40,w.pasajero46,#Centro Turista IZQ(0-6) "1"
                     w.pasajero13,w.pasajero19,w.pasajero25,w.pasajero31,w.pasajero37,w.pasajero43,w.pasajero49],#Centro Turista DER(7-13) "1"
                    [w.pasajero11,w.pasajero12,w.pasajero17,w.pasajero18,w.pasajero23,w.pasajero24,w.pasajero29,#Pasillo Turista IZQ(0-6) "2"
                     w.pasajero30,w.pasajero35,w.pasajero36,w.pasajero41,w.pasajero42,w.pasajero47,w.pasajero48]]
    ventanaIngresar = tk.Toplevel(root)
    ventanaIngresar.title("Ingresar Datos")
    ventanaIngresar.geometry("240x260")
    center(ventanaIngresar)
    Label_1 = Label(ventanaIngresar, text="Nombre del Pasajero",font = ('Arial',8,'bold'))
    Label_1.grid (column = 0, row = 0,sticky = 'n')
    Entry_1 = Entry (ventanaIngresar, relief = 'sunken',bg = 'white',bd = 2, width = 25)
    Entry_1.grid (column = 0, row = 1)
    Entry_1.focus()
    Label_2 = Label(ventanaIngresar, text="Cedula del Pasajero",font = ('Arial',8,'bold'))
    Label_2.grid (column = 0, row = 2,sticky = 'n')
    Entry_2 = Entry (ventanaIngresar, relief = 'sunken',bg = 'white',bd = 2, width = 25)
    Entry_2.grid (column = 0, row = 3)
    Label_3 = Label(ventanaIngresar, text="Clase de la Silla",font = ('Arial',8,'bold'))
    Label_3.grid (column = 0, row = 4,sticky = 'n')
    Select = IntVar()
    Select2 = IntVar()
    rad1 = Radiobutton(ventanaIngresar,text='Ejecutiva', value=1,variable = Select)
    rad1.grid(column=0, row=5,sticky = 'w')
    rad2 = Radiobutton(ventanaIngresar,text='Turista', value=2,variable = Select)
    rad2.grid(column=0, row=5,sticky = 'e')
    Label_4 = Label(ventanaIngresar, text="Ubicacion de la Silla (EJECUTIVA)",font = ('Arial',8,'bold'))
    Label_4.grid (column = 0, row = 6,sticky = 'n')
    rad1E = Radiobutton(ventanaIngresar,text='Ventanilla', value=3,variable = Select2)
    rad1E.grid(column=0, row=7,sticky = 'w')
    rad2E = Radiobutton(ventanaIngresar,text='Pasillo', value=4,variable = Select2)
    rad2E.grid(column=0, row=7,sticky = 'e')
    btn = Button (ventanaIngresar,text = 'RESERVAR',relief = 'raised',bg = 'lightskyblue',bd = 3,height = 1, width = 28,command = lambda : [reservar()])
    btn.grid (column = 0, row = 8)

    def reservar():
##########EJECUTIVO#########
        rad1 = Select.get()
        rad1E = Select2.get()
        rad2E = Select2.get()
        nombrePasajero = Entry_1.get()
        numCedula = Entry_2.get()
        if rad1 == 1: #Ejecutivo
            if rad1E == 3:
                contador = 0
                listaOcupadosEjecutivosVentanilla.append(contador)
                for pasajero in range (len(listaOcupadosEjecutivosVentanilla)):
                    if pasajero == contador:
                        pasajero = asientosEjecutivos[0][contador]
                        pasajero.configure(background="#ff0000")
                        listaCedulaPasajero.append(numCedula)
                        listaNombrePasajero.append(nombrePasajero)
                        asientos.append(pasajero)
                        ventanaIngresar.destroy()
                        contador += 1
            elif rad2E == 4:
                contador = 0
                numCedula = Entry_2.get()
                listaOcupadosEjecutivosVentanilla.append(1)
                for pasajero in range (len(listaOcupadosEjecutivosPasillo)):
                    if pasajero == contador:
                        pasajero = asientosEjecutivos[1][contador]
                        pasajero.configure(background="#ff0000")
                        listaCedulaPasajero.append(numCedula)
                        listaNombrePasajero.append(nombrePasajero)
                        ventanaIngresar.destroy()
                        contador += 1
##########TURISTA##############
        rad2 = Select.get()
        if rad2 == 2: #Turista
            ventanaTurista = tk.Toplevel(root)
            ventanaTurista.title("Ingresar Datos")
            center(ventanaTurista)
            ventanaTurista.geometry("240x180")
            rad1T = Radiobutton(ventanaTurista,text='Ventana', value=5,variable = Select)
            rad1T.grid(column=0, row=1,sticky = 'w')
            rad2T = Radiobutton(ventanaTurista,text='Medio', value=6,variable = Select)
            rad2T.grid(column=0, row=1,sticky = 'n')
            rad3T = Radiobutton(ventanaTurista,text='Pasillo', value=7,variable = Select)
            rad3T.grid(column=0, row=1,sticky = 'e')
            btn = Button (ventanaTurista,text = 'RESERVAR',relief = 'raised',bg = 'lightskyblue',bd = 3,height = 1, width = 28,command = lambda : [reservar()])
            btn.grid (column = 0, row = 2)
            def reservar():
                rad1T = Select.get()
                rad2T = Select.get()
                rad3T = Select.get()
                if rad1T == 5: #Ventanilla
                    contador = 0
                    numCedula = Entry_2.get()
                    listaOcupadosTuristaVentanilla.append(contador)
                    for pasajero in range (len(listaOcupadosTuristaVentanilla)):
                        if pasajero == contador:
                            pasajero = asientosTuristas[0][contador]
                            pasajero.configure(background="#ff0000")
                            listaCedulaPasajero.append(numCedula)
                            listaNombrePasajero.append(nombrePasajero)
                            ventanaTurista.destroy()
                            ventanaIngresar.destroy()
                            contador += 1

                elif rad2T == 6: #Medio:
                    contador = 0
                    numCedula = Entry_2.get()
                    listaOcupadosTuristaMedio.append(1)
                    for pasajero in range (len(listaOcupadosTuristaMedio)):
                        if pasajero == contador:
                            pasajero = asientosTuristas[1][contador]
                            pasajero.configure(background="#ff0000")
                            listaCedulaPasajero.append(numCedula)
                            listaNombrePasajero.append(nombrePasajero)
                            ventanaTurista.destroy()
                            ventanaIngresar.destroy()
                            contador += 1

                elif rad3T == 7: #Pasillo:
                    contador = 0
                    numCedula = Entry_2.get()
                    listaOcupadosTuristaPasillo.append(2)
                    for pasajero in range (len(listaOcupadosTuristaPasillo)):
                        if pasajero == contador:
                            pasajero = asientosTuristas[2][contador]
                            pasajero.configure(background="#ff0000")
                            listaCedulaPasajero.append(numCedula)
                            listaNombrePasajero.append(nombrePasajero)
                            ventanaTurista.destroy()
                            ventanaIngresar.destroy()
                            contador += 1

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import pasajesDeAvion
    pasajesDeAvion.vp_start_gui()




